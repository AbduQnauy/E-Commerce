{"ast":null,"code":"var _jsxFileName = \"/media/abdo/Data2/andreiReact/e-commerce/client/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from \"react\"; // import \"./cart-dropdown.styles.scss\";\n\nimport { CartDropDownContainer, CartItems, EmptyMessage } from \"./card-dropdown.styles\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { connect } from \"react-redux\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(CartDropDownContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(CartItems, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(item => React.createElement(CartItem, {\n  item: item,\n  key: item.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n})) : React.createElement(EmptyMessage, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"GO TO CHECKOUT\")); // const mapStateToProps = ({ cart: { cartItems } }) => {\n//   console.log(\"cart-dropdown is rendered\");\n//   return {\n//     cartItems\n//   };\n// };\n\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/media/abdo/Data2/andreiReact/e-commerce/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","CartDropDownContainer","CartItems","EmptyMessage","CustomButton","CartItem","connect","selectCartItems","createStructuredSelector","withRouter","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","item","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SACEC,qBADF,EAEEC,SAFF,EAGEC,YAHF,QAIO,wBAJP;AAKA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KACnB,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAcC,IAAI,IAAI,oBAAC,QAAD;AAAU,EAAA,IAAI,EAAEA,IAAhB;AAAsB,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAtB,CADD,GAGC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,CADF,EAQE,oBAAC,YAAD;AACE,EAAA,OAAO,EAAE,MAAM;AACbL,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACD,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,CADF,C,CAoBA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMU,eAAe,GAAGZ,wBAAwB,CAAC;AAC/CI,EAAAA,SAAS,EAAEL;AADoC,CAAD,CAAhD;AAIA,eAAeE,UAAU,CAACH,OAAO,CAACc,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\n// import \"./cart-dropdown.styles.scss\";\nimport {\n  CartDropDownContainer,\n  CartItems,\n  EmptyMessage\n} from \"./card-dropdown.styles\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { connect } from \"react-redux\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n  <CartDropDownContainer>\n    <CartItems>\n      {cartItems.length ? (\n        cartItems.map(item => <CartItem item={item} key={item.id} />)\n      ) : (\n        <EmptyMessage>Your cart is empty</EmptyMessage>\n      )}\n    </CartItems>\n    <CustomButton\n      onClick={() => {\n        history.push(\"/checkout\");\n        dispatch(toggleCartHidden());\n      }}\n    >\n      GO TO CHECKOUT\n    </CustomButton>\n  </CartDropDownContainer>\n);\n\n// const mapStateToProps = ({ cart: { cartItems } }) => {\n//   console.log(\"cart-dropdown is rendered\");\n//   return {\n//     cartItems\n//   };\n// };\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}