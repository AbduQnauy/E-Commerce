{"ast":null,"code":"var _jsxFileName = \"/media/abdo/Data2/andreiReact/e-commerce/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionCotainer from \"../collection/collection.container\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\"; // const CollectionsOverViewWithSpinner = WithSpinner(CollectionsOverView);\n// const CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  // componentDidMount() {\n  //   const { fetchCollectionsStart } = this.props;\n  //   fetchCollectionsStart();\n  // }\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    component: CollectionCotainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/media/abdo/Data2/andreiReact/e-commerce/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","CollectionOverviewContainer","CollectionCotainer","fetchCollectionsStart","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,2BAAP,MAAwC,sEAAxC;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,SAASC,qBAAT,QAAsC,+BAAtC,C,CAEA;AACA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,qBAAF;AAAyBE,EAAAA;AAAzB,CAAD,KAAsC;AACrD;AACA;AACA;AACA;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,YAAKE,KAAK,CAACC,IAAX,CAFN;AAGE,IAAA,SAAS,EAAEL,2BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EA6BE,oBAAC,KAAD;AACE,IAAA,IAAI,YAAKI,KAAK,CAACC,IAAX,mBADN;AAEE,IAAA,SAAS,EAAEJ,kBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,CADF;AAoCD,CA5CD;;AA8CA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACtCL,EAAAA,qBAAqB,EAAE,MAAMK,QAAQ,CAACL,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CACpB,IADoB,EAEpBO,kBAFoB,CAAP,CAGbH,QAHa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionCotainer from \"../collection/collection.container\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\n\n// const CollectionsOverViewWithSpinner = WithSpinner(CollectionsOverView);\n// const CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\n  // componentDidMount() {\n  //   const { fetchCollectionsStart } = this.props;\n  //   fetchCollectionsStart();\n  // }\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, []);\n  return (\n    <div className=\"shop-page\">\n      {/* <Route\n          exact\n          path={`${match.path}`}\n          // render={() => <CollectionsOverViewWithSpinner isLoading={loading} />}\n          // render={() => CollectionsOverViewWithSpinner({ isLoading: loading })}\n          render={() =>\n            WithSpinner(CollectionsOverView)({\n              isLoading: isFetchingCollections\n            })\n          }\n        /> */}\n      <Route\n        exact\n        path={`${match.path}`}\n        component={CollectionOverviewContainer}\n      />\n\n      {/* <Route\n          path={`${match.path}/:collectionId`}\n          render={props =>\n            // <CollectionsPageWithSpinner isLoading={loading} {...props} />\n            // CollectionsPageWithSpinner({ isLoading: loading, ...props })\n            WithSpinner(CollectionPage)({\n              isLoading: !isCollectionLoaded,\n              ...props\n            })\n          }\n        /> */}\n      <Route\n        path={`${match.path}/:collectionId`}\n        component={CollectionCotainer}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}