{"ast":null,"code":"import { takeLatest, call, all, put } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase-utils\";\nimport { fetchCollectionSuccess, fetchCollectionsFailure } from \"./shop.actions\";\n\nfunction* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nfunction* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/media/abdo/Data2/andreiReact/e-commerce/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","all","put","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SACEC,sBADF,EAEEC,uBAFF,QAGO,gBAHP;;AAKA,UAAUC,qBAAV,GAAkC;AAChC,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAC/BK,+BAD+B,EAE/BM,QAF+B,CAAjC;AAIA,UAAMT,GAAG,CAACI,sBAAsB,CAACO,cAAD,CAAvB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACK,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;;AAED,UAAUC,qBAAV,GAAkC;AAChC,QAAMjB,UAAU,CACdI,eAAe,CAACc,uBADF,EAEdT,qBAFc,CAAhB;AAID;;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMjB,GAAG,CAAC,CAACD,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, all, put } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase-utils\";\nimport {\n  fetchCollectionSuccess,\n  fetchCollectionsFailure\n} from \"./shop.actions\";\n\nfunction* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nfunction* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}