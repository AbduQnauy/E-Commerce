{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase-utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n}); // THUNK\n\nexport const fetchCollectionsStartAsync = () => dispatch => {\n  const collectionRef = firestore.collection(\"collections\");\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionSuccess(collectionsMap));\n  }).catch(error => {\n    dispatch(fetchCollectionsFailure(error.message));\n  });\n};","map":{"version":3,"sources":["/media/abdo/Data2/andreiReact/e-commerce/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAK;AACvDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADiC;AAEvDC,EAAAA,OAAO,EAAEF;AAF8C,CAAL,CAA7C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADgC;AAEtDH,EAAAA,OAAO,EAAEE;AAF6C,CAAL,CAA5C,C,CAKP;;AACA,OAAO,MAAME,0BAA0B,GAAG,MAAMC,QAAQ,IAAI;AAC1D,QAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAF,EAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,EAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,UAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AAEAL,IAAAA,QAAQ,CAACR,sBAAsB,CAACC,cAAD,CAAvB,CAAR;AACD,GANH,EAOGa,KAPH,CAOSC,KAAK,IAAI;AACdP,IAAAA,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAR;AACD,GATH;AAUD,CAfM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase-utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\n\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\n\n// THUNK\nexport const fetchCollectionsStartAsync = () => dispatch => {\n  const collectionRef = firestore.collection(\"collections\");\n\n  dispatch(fetchCollectionsStart());\n\n  collectionRef\n    .get()\n    .then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\n      dispatch(fetchCollectionSuccess(collectionsMap));\n    })\n    .catch(error => {\n      dispatch(fetchCollectionsFailure(error.message));\n    });\n};\n"]},"metadata":{},"sourceType":"module"}